#!/usr/bin/env groovy
import groovy.json.JsonOutput

pipeline {

    agent any

    environment {
        registry = "danieltnaves/filtering-service"
        registryCredential = 'dockerhub'
        dockerImage = ''
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore=true clean package -f ./filtering-service/pom.xml'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test -f ./filtering-service/pom.xml'
            }
        }

//        stage('Integration Test') {
//            steps {
//                sh 'mvn clean integration-test -f ./filtering-service/pom.xml'
//            }
//        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build(registry + ":$BUILD_NUMBER", "-f ./filtering-service/Dockerfile .")
                }
            }
        }

        stage('Publish Docker Image') {
            steps{
                script {
                    docker.withRegistry('', registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Deploy to ECS') {
            steps {
                sh 'sed -e "s;%BUILD_NUMBER%;${BUILD_NUMBER};g" ./filtering-service/filtering-service-task.json > filtering-service-task_${BUILD_NUMBER}.json'
                sh 'aws ecs register-task-definition --cli-input-json file://filtering-service-task_${BUILD_NUMBER}.json --region us-east-1'
                sh '''
                    FILTERING_SERVICE_TASK_REVISION=`aws ecs describe-task-definition --task-definition filtering-service-task | egrep "revision" | tr "/" " " | awk \'{print $2}\' | sed \'s/"$//\'`
                    aws ecs update-service --cluster ecs-filtering-service-api --service filtering-service --task-definition filtering-service-task:${FILTERING_SERVICE_TASK_REVISION} --desired-count 2
                   '''
            }
        }

        stage('Create release tag on Git') {
            steps {
                sh 'git tag release_${BUILD_NUMBER}'
                sh 'git push release_${BUILD_NUMBER}'
            }
        }

    }
}
